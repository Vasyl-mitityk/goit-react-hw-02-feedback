{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.jsx","components/Statistics/Statistics.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css","App.module.css"],"names":["FeedbackOptions","props","type","className","styles","cup","onClick","evt","onLeaveFeedback","Section","title","Statistics","good","bad","neutral","total","positivePercentage","App","state","countTotalFeedback","object","Object","values","reduce","a","b","countPositiveFeedbackPercentage","positiveFeedbackPercentage","toFixed","incrementState","value","setState","prevState","this","positivePercent","container","options","Component","defaultProps","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"gRAIe,SAASA,EAAgBC,GACtC,OACE,qCACE,wBACEC,KAAK,SACLC,UAAWC,IAAOC,IAClBC,QAAS,SAAAC,GACPN,EAAMO,gBAAgB,SAJ1B,SAOG,SAGH,wBACEN,KAAK,SACLC,UAAWC,IAAOC,IAClBC,QAAS,SAAAC,GACPN,EAAMO,gBAAgB,QAJ1B,SAOG,QAGH,wBACEN,KAAK,SACLC,UAAWC,IAAOC,IAClBC,QAAS,SAAAC,GACPN,EAAMO,gBAAgB,YAJ1B,SAOG,eC9BM,SAASC,EAAQR,GAC5B,OACI,qCACI,+CACA,6BAAKA,EAAMS,QACX,oDACA,cAACV,EAAD,CACIQ,gBAAiBP,EAAMO,qBCRxB,SAASG,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,IACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,qCACE,4CACA,wCACQ,+BAAOJ,OAEf,uCACO,+BAAOC,OAEd,2CACW,+BAAOC,OAElB,yCACS,+BAAOC,OAEhB,qDACqB,iCAAOC,EAAP,a,oBCrBNC,E,4MAOnBC,MAAQ,CACNN,KAAM,EACNE,QAAS,EACTD,IAAK,G,EAGPM,mBAAqB,SAAAC,GACnB,OAAOC,OAAOC,OAAOF,GAAQG,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,I,EAGvDC,gCAAkC,WAChC,IAAIC,GACiB,IAAlB,EAAKT,MAAMN,KACZS,OAAOC,OAAO,EAAKJ,OAAOK,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,IAClDG,QAAQ,GAEV,OAA2B,IAApB,EAAKV,MAAMN,KAAae,EAA6B,G,EAG9DE,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAAAC,GACZ,OAAO,eAAGF,EAAQE,EAAUF,GAAS,O,4CAIzC,WACE,MAA+BG,KAAKf,MAA5BN,EAAR,EAAQA,KAAME,EAAd,EAAcA,QAASD,EAAvB,EAAuBA,IAEnBE,EAAQkB,KAAKd,mBAAmBc,KAAKf,OACrCgB,EAAkBD,KAAKP,kCAE3B,OACE,mCACE,0BAASvB,UAAWC,IAAO+B,UAA3B,UACE,cAAC1B,EAAD,CACEC,MAAM,0BACN0B,QAAS,CAACxB,EAAMC,EAAKC,GACrBN,gBAAiByB,KAAKJ,iBAGiB,IAAxCI,KAAKd,mBAAmBc,KAAKf,QAC5B,cAACP,EAAD,CACEC,KAAMA,EACNE,QAASA,EACTD,IAAKA,EACLE,MAAOA,EACPC,mBAAoBkB,a,GArDDG,aAAZpB,EACZqB,aAAe,CACpB1B,KAAM,EACNE,QAAS,EACTD,IAAK,GCTT,IAYe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,IAAM,+B,kBCAxBD,EAAOC,QAAU,CAAC,IAAM,iBAAiB,WAAW,sBAAsB,gBAAgB,2BAA2B,aAAa,wBAAwB,WAAW,yB","file":"static/js/main.f30631b7.chunk.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions(props) {\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={styles.cup}\n        onClick={evt => {\n          props.onLeaveFeedback('good');\n        }}\n      >\n        {'Good'}\n      </button>\n\n      <button\n        type=\"button\"\n        className={styles.cup}\n        onClick={evt => {\n          props.onLeaveFeedback('bad');\n        }}\n      >\n        {'Bad'}\n      </button>\n\n      <button\n        type=\"button\"\n        className={styles.cup}\n        onClick={evt => {\n          props.onLeaveFeedback('neutral');\n        }}\n      >\n        {'neutral'}\n      </button>\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: propTypes.func,\n};\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\r\n\r\nexport default function Section(props) {\r\n    return (\r\n        <>\r\n            <h1>Section Stats</h1>\r\n            <h2>{props.title}</h2>\r\n            <h2> Feedback options </h2>\r\n            <FeedbackOptions\r\n                onLeaveFeedback={props.onLeaveFeedback}\r\n            ></FeedbackOptions>\r\n        </>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string,\r\n    options: PropTypes.array,\r\n};\r\n","import React from 'react';\nimport propTypes from 'prop-types';\n\nexport default function Statistics({\n  good,\n  bad,\n  neutral,\n  total,\n  positivePercentage,\n}) {\n  return (\n    <>\n      <h2>Statistics</h2>\n      <h3>\n        Good: <span>{good}</span>\n      </h3>\n      <h3>\n        Bad: <span>{bad}</span>\n      </h3>\n      <h3>\n        Neutral: <span>{neutral}</span>\n      </h3>\n      <h3>\n        Total: <span>{total}</span>\n      </h3>\n      <h3>\n        Positive Feedback: <span>{positivePercentage}%</span>\n      </h3>\n    </>\n  );\n}\n\nStatistics.propTypes = {\n  good: propTypes.number,\n  bad: propTypes.number,\n  neutral: propTypes.number,\n  total: propTypes.number,\n  positivePercentage: propTypes.string,\n};\n","import React, { Component } from 'react';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport styles from './App.module.css';\n\nexport default class App extends Component {\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = object => {\n    return Object.values(object).reduce((a, b) => a + b, 0);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercentage = (\n      (this.state.good * 100) /\n      Object.values(this.state).reduce((a, b) => a + b, 0)\n    ).toFixed(2);\n\n    return this.state.good !== 0 ? positiveFeedbackPercentage : 0;\n  };\n\n  incrementState = value => {\n    this.setState(prevState => {\n      return { [value]: prevState[value] + 1 };\n    });\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    let total = this.countTotalFeedback(this.state);\n    let positivePercent = this.countPositiveFeedbackPercentage();\n\n    return (\n      <>\n        <section className={styles.container}>\n          <Section\n            title=\"Please leave feedback!!\"\n            options={[good, bad, neutral]}\n            onLeaveFeedback={this.incrementState}\n          />\n\n          {this.countTotalFeedback(this.state) !== 0 && (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercent}\n            />\n          )}\n        </section>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cup\":\"FeedbackOptions_cup__2t5qU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__BgJjR\",\"App-logo\":\"App_App-logo__3SDMx\",\"App-logo-spin\":\"App_App-logo-spin__2d35e\",\"App-header\":\"App_App-header__qgSRB\",\"App-link\":\"App_App-link__2Ibcl\"};"],"sourceRoot":""}